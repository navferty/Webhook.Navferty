@page "/requestdetails/{id:guid}"
@using Webhook.Navferty
@using System.Net
@using Ganss.Xss
@using Webhook.Navferty.Data

@inject IRequestRepository RequestRepository

@{
    ViewData["Title"] = "Request Details";
    var requestIdRaw = RouteData.Values["id"];
    var tenantIdRaw = Request.Query["tenantId"];
    if (!Guid.TryParse(requestIdRaw?.ToString(), out var requestId))
        throw new ArgumentException("Invalid request id.");

    if (!Guid.TryParse(tenantIdRaw, out var tenantId))
        throw new ArgumentException("Invalid tenant id.");

    var request = await RequestRepository.GetRequest(tenantId, requestId);
    if (request == null)
    {
        // 404
        Response.StatusCode = 404;
        await Response.WriteAsync("Not found");
        return;
    }

    var sanitizer = new HtmlSanitizer();
}

<h3>
    Request
    @if (request != null)
    {
        <span class="badge bg-secondary">#@request.Id</span>
    }
</h3>

@if (request == null)
{
    <p>Request not found.</p>
}
else
{
    <dl class="row">

        <dt class="col-sm-2">IP Address</dt>
        <dd class="col-sm-10"><pre>@request.IpAddress</pre></dd>

        <dt class="col-sm-2">Path</dt>
        <dd class="col-sm-10"><pre>@sanitizer.Sanitize(WebUtility.UrlDecode(request.Path))</pre></dd>

        <dt class="col-sm-2">Method</dt>
        <dd class="col-sm-10"><pre>@request.Method</pre></dd>

        <dt class="col-sm-2">Headers</dt>
        <dd class="col-sm-10"><pre>@sanitizer.Sanitize(request.Headers)</pre></dd>

        <dt class="col-sm-2">Query String</dt>
        <dd class="col-sm-10"><pre>@sanitizer.Sanitize(WebUtility.UrlDecode(request.QueryString))</pre></dd>

        <dt class="col-sm-2">Body @MapContentType(request.ContentType)</dt>
        <dd class="col-sm-10"><pre>@sanitizer.Sanitize(request.Body)</pre></dd>

        <dt class="col-sm-2">Created At</dt>
        <dd class="col-sm-10"><pre>@request.CreatedAt</pre></dd>
    </dl>
}

@{
    string MapContentType(RequestContentType type)
    {
        return type switch
        {
            RequestContentType.Html => "(HTML)",
            RequestContentType.Text => "(plain text)",
            RequestContentType.Json => "(JSON)",
            RequestContentType.Form => "(form data)",
            _ => ""
        };
    }
}
