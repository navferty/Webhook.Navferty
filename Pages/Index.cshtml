@page "/Index"
@using Webhook.Navferty
@using System.Net
@using Ganss.Xss
@using Webhook.Navferty.Data
@inject IRequestRepository RequestRepository

@{
    var tenantIdString = Request.Query["tenantId"];
    if (string.IsNullOrWhiteSpace(tenantIdString)
        || !Guid.TryParse(tenantIdString, out var tenantId)
        || tenantId == Guid.Empty)
    {
        throw new ArgumentException("TenantId is required");
    }

    ViewData["Title"] = "Recent Web Requests";
    var requests = await RequestRepository.GetRequests(tenantId, DateTimeOffset.MinValue, DateTimeOffset.MaxValue);
    var sanitizer = new HtmlSanitizer();
}

<h1>Webhook</h1>

<p>
    This is a simple webhook service that logs all incoming requests.
</p>

<p>
    To make a request, use the following base URL:
</p>

<div class="input-group mb-3">
    <input type="text" class="form-control" id="baseUrl" value="https://webhook.navferty.com/@tenantId" readonly style="background-color: lightgray;">
    <button class="btn btn-outline-secondary" type="button" id="copyButton" onclick="copyToClipboard()">Copy</button>
</div>

<p>
    You can construct any url and use any HTTP method, for example:
    <code>POST https://webhook.navferty.com/@tenantId/any/path/you/want</code>
</p>

<p>
    The service will log the request, including the path, method, query string, headers, and body.
    You can view the recent requests below. Keep the Id @tenantId to view your requests.
</p>

<p>
    <a href="/ConfigureResponses?tenantId=@tenantId">Configure Responses</a>
</p>

<h3>Recent Web Requests</h3>

@if (requests == null || !requests.Any())
{
    <p>No requests found.</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Method</th>
                <th>Path</th>
                <th>Created At</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var request in requests)
            {
                <tr>
                    <td><a href="/requestdetails/@request.Id?tenantId=@tenantId">@request.Id</a></td>
                    <td>@request.Method</td>
                    <td>@sanitizer.Sanitize(WebUtility.UrlDecode(request.Path))</td>
                    <td>@request.CreatedAt</td>
                </tr>
            }
        </tbody>
    </table>
}

<script>
    function copyToClipboard() {
        var copyText = document.getElementById("baseUrl");
        var actualUrl = copyText.value.replace("@tenantId", "@tenantIdString");
        navigator.clipboard.writeText(actualUrl).then(function() {
            var copyButton = document.getElementById("copyButton");
            copyButton.textContent = "Copied";
            setTimeout(function() {
                copyButton.textContent = "Copy";
            }, 5000);
        }, function(err) {
            console.error("Could not copy text: ", err);
        });
    }

    function adjustInputWidth() {
        var input = document.getElementById("baseUrl");
        var tempSpan = document.createElement("span");
        tempSpan.style.visibility = "hidden";
        tempSpan.style.whiteSpace = "nowrap";
        tempSpan.style.fontSize = getComputedStyle(input).fontSize;
        tempSpan.style.fontFamily = getComputedStyle(input).fontFamily;
        tempSpan.innerText = input.value;
        document.body.appendChild(tempSpan);
        input.style.width = (tempSpan.offsetWidth + 15) + "px";
        document.body.removeChild(tempSpan);
    }

    document.addEventListener("DOMContentLoaded", adjustInputWidth);
</script>
